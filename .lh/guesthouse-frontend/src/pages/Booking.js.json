{
    "sourceFile": "guesthouse-frontend/src/pages/Booking.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753928132680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753928132680,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { QRCodeSVG } from \"qrcode.react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Booking() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    roomType: \"\",\r\n    checkIn: \"\",\r\n    checkOut: \"\",\r\n    paymentStatus: \"\",\r\n  });\r\n\r\n  const [amount, setAmount] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const calculateDays = (checkIn, checkOut) => {\r\n    const inDate = new Date(checkIn);\r\n    const outDate = new Date(checkOut);\r\n    const diffTime = outDate - inDate;\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const updatedData = { ...formData, [name]: value };\r\n    setFormData(updatedData);\r\n\r\n    if ([\"roomType\", \"checkIn\", \"checkOut\"].includes(name)) {\r\n      const days = calculateDays(updatedData.checkIn, updatedData.checkOut);\r\n      let rate = 0;\r\n      switch (updatedData.roomType) {\r\n        case \"Single\": rate = 800; break;\r\n        case \"Double\": rate = 1200; break;\r\n        case \"Suite\": rate = 1800; break;\r\n        default: rate = 0;\r\n      }\r\n      setAmount(days > 0 && rate > 0 ? rate * days : 0);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { fullName, email, phone, roomType, checkIn, checkOut, paymentStatus } = formData;\r\n\r\n    if (!fullName || !email || !phone || !roomType || !checkIn || !checkOut || !paymentStatus) {\r\n      setError(\"‚ö†Ô∏è Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    if (checkIn < today) {\r\n      setError(\"‚ö†Ô∏è Check-in date cannot be in the past.\");\r\n      return;\r\n    }\r\n    if (checkOut <= checkIn) {\r\n      setError(\"‚ö†Ô∏è Check-out must be after Check-in.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n\r\n    const bookingData = { ...formData, amount, createdAt: new Date().toISOString() };\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/bookings\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(bookingData)\r\n      });\r\n\r\n      const result = await res.json();\r\n\r\n      if (result.success) {\r\n        // ‚úÖ Redirect to Success Page with booking ID\r\n        navigate(`/success?id=${result.id}`);\r\n      } else {\r\n        alert(\"‚ùå Failed to save booking.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      alert(\"‚ö†Ô∏è Error occurred while saving.\");\r\n    }\r\n  };\r\n\r\n  const upiString = `upi://pay?pa=9525594357@naviaxis&pn=Guest House&am=${amount}&cu=INR&tn=Booking for ${formData.fullName}`;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Guest House Booking Form</h2>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <input type=\"text\" name=\"fullName\" placeholder=\"Full Name\" value={formData.fullName} onChange={handleChange} style={styles.input} />\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email Address\" value={formData.email} onChange={handleChange} style={styles.input} />\r\n        <input type=\"tel\" name=\"phone\" placeholder=\"Phone Number\" value={formData.phone} onChange={handleChange} style={styles.input} />\r\n\r\n        <select name=\"roomType\" value={formData.roomType} onChange={handleChange} style={styles.input}>\r\n          <option value=\"\">Select Room Type</option>\r\n          <option value=\"Single\">Single Room (‚Çπ800/day)</option>\r\n          <option value=\"Double\">Double Room (‚Çπ1200/day)</option>\r\n          <option value=\"Suite\">Suite (‚Çπ1800/day)</option>\r\n        </select>\r\n\r\n        <div style={styles.dateRow}>\r\n          <div style={styles.dateGroup}>\r\n            <label style={styles.label}>Check-In Date:</label>\r\n            <input type=\"date\" name=\"checkIn\" value={formData.checkIn} onChange={handleChange} style={styles.input} />\r\n          </div>\r\n          <div style={styles.dateGroup}>\r\n            <label style={styles.label}>Check-Out Date:</label>\r\n            <input type=\"date\" name=\"checkOut\" value={formData.checkOut} onChange={handleChange} style={styles.input} />\r\n          </div>\r\n        </div>\r\n\r\n        <label style={styles.label}>Payment Method:</label>\r\n        <div style={styles.radioGroup}>\r\n          <label>\r\n            <input type=\"radio\" name=\"paymentStatus\" value=\"Online\" checked={formData.paymentStatus === \"Online\"} onChange={handleChange} />\r\n            Online\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" name=\"paymentStatus\" value=\"Cash\" checked={formData.paymentStatus === \"Cash\"} onChange={handleChange} />\r\n            Cash\r\n          </label>\r\n        </div>\r\n\r\n        {error && <p style={{ color: \"red\", fontWeight: \"bold\" }}>{error}</p>}\r\n\r\n        {formData.paymentStatus === \"Online\" && amount > 0 && (\r\n          <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <p>Scan QR to pay ‚Çπ{amount}:</p>\r\n            <QRCodeSVG value={upiString} size={200} />\r\n          </div>\r\n        )}\r\n\r\n        {formData.paymentStatus && (\r\n          <button type=\"submit\" style={styles.button}>\r\n            {formData.paymentStatus === \"Online\" ? \"‚úÖ Confirm Payment & Book\" : \"üìù Confirm Booking (Cash)\"}\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: \"40px\",\r\n    maxWidth: \"650px\",\r\n    margin: \"auto\",\r\n    backgroundColor: \"#f9f9f9\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"30px\",\r\n    color: \"#003366\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"15px\",\r\n  },\r\n  input: {\r\n    padding: \"12px\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"8px\",\r\n    fontSize: \"16px\",\r\n  },\r\n  label: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"6px\",\r\n    color: \"#444\",\r\n  },\r\n  radioGroup: {\r\n    display: \"flex\",\r\n    gap: \"20px\",\r\n    marginBottom: \"10px\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n  dateRow: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  dateGroup: {\r\n    flex: \"1\",\r\n    minWidth: \"45%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"4px\",\r\n  },\r\n  button: {\r\n    padding: \"12px\",\r\n    backgroundColor: \"#003366\",\r\n    color: \"white\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n    border: \"none\",\r\n    borderRadius: \"8px\",\r\n    cursor: \"pointer\",\r\n    marginTop: \"20px\",\r\n  },\r\n};\r\n\r\nexport default Booking;\r\n"
        }
    ]
}